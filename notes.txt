many many hours before this
Feb 21 - 14-18:20
Feb 22 - 10-13:30 .. 15-2 am
Feb 23 - 12(noon)-4 am
Feb 24 - 18:30-21:30

Feb 26 - 17-21
Feb 27 - 12-12:30 .. 15-3 am
Feb 28 - 16-3 am
Feb 29 -  23-5:10 am .. 16-20
March 1 - 19:40-5:10 am
March 2 - 23-3:40 am

March 4 - 22:30-6:30 am
March 5 - 


March 7 : 23-1 am 2am-7AM
- working on final report and doc stuff


everything needs to be pushed again.  3-5: 6 am
handler needs to be zipped and uploaded again  3-5: 6 am

i started the README.
- clean up front end 
- maybe deploy it ?

DO NOT WORK MORE ON THIS, YOU NEED TO STUDY . DO NOT IMPLEMENT A LOG IN !!!
STUDY FOR GRAPHICS TEST !!!!!
(but i really want to ah) 

22:30 - 6:30 AM march 5





graphs look gorg. gotta work on parsing the data now and then depending on button, load correct data into graph . also adding the other historys in the database . and providing support in lambda function for them
i fixed that stupid map too. had to import the css file from node_modules
3/2 |11 pm - 3:30 am







ok the latest: i think everything is working !! so back to front-end stuff 
rightnow: working on warning and alert box
- work on graphs i guess
- cultivate a beautiful github
- maybe post the frontend somewhere ??? idk though
- put the other leds on the hardware and attach to a box or something 
- prob just stop. i got other stuff to do

stopped at 5:10 AM haha 





i have no idea how i fixed that honestly. (below)
i think i just commented the way to do it, messed around alot, uncommented, and then it started working at some point



there's an error parsing the message and idk why !!!!!

i think it's the quotes maybe .


msg to send :: JSON.parse(data)

{
    "action": "msg",
    "type": "output",
    "connectionID": "",
    "deviceID": "189922615539556",
    "messageID": "1",
    "body": {
        "output": {
            "light": {
                "val": "1143"
            },
            "tempReading": {
                "temp": "68",
                "humidity": "60",
                "heat_index": "68"
            },
            "gpsReading": {
                "lat": "nan",
                "long": "nan",
                "alt": "nan",
                "speed": "nan"
            }
        }
    }
}


one that sends

{
    "action": "msg",
    "id": "189922615539556",
    "type": "get",
    "body": {
        "req": "getAll",
        "value": {
            "autoMode": false,
            "lightMode": true,
            "parkMode": false,
            "tempReading": {
                "temp": "69",
                "humidity": "59",
                "heat_index": "68"
            },
            "gpsReading": {
                "lat": "nan",
                "long": "nan",
                "alt": "nan",
                "speed": "nan"
            },
            "tempHistory": "[...]",
            "parkedLocation": {
                "lat": "nan",
                "long": "nan"
            }
        }
    }
}


Error Parsing JSON: SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data 
App@http://localhost:5173/src/App.tsx?t=1709362078835:44:19
RenderedRoute@http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c607bd97:3471:7
Routes@http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c607bd97:3903:7
Router@http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c607bd97:3851:7
BrowserRouter@http://localhost:5173/node_modules/.vite/deps/react-router-dom.js?v=c607bd97:4583:7 localhost:5173:13024:25
    overrideMethod (index):13024
    App App.tsx:86
    React 13
    protectedSetLastMessage use-websocket.ts:95
    onmessage attach-listener.ts:46
    (Async: EventHandlerNonNull)
    bindMessageHandler attach-listener.ts:33
    attachListeners attach-listener.ts:162
    createOrJoinSocket create-or-join.ts:106
    start_1 use-websocket.ts:110
    step react-use-websocket.js:830
    verb react-use-websocket.js:777
    fulfilled react-use-websocket.js:748
    (Async: promise callback)
    step react-use-websocket.js:761
    __awaiter react-use-websocket.js:763
    __awaiter react-use-websocket.js:745
    start_1 use-websocket.ts:90
    useWebSocket use-websocket.ts:130
    React 13
    scheduleRefresh (index):9222
    performReactRefresh @react-refresh:267
    performReactRefresh @react-refresh:256
    (Async: setTimeout handler)
    debounce @react-refresh:666
    __vite_plugin_react_timeout App.tsx:895
    (Async: setTimeout handler)
    <anonymous> App.tsx:893